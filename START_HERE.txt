
**Important Information**
  The store_config file inside of src/assets holds most of the information relevant to the store. That is where the Stripe Public ID goes and any Product information you need, like sizes or colors.

**File Struture**
  I suggest taking a quick look through the file structure and see how things are seperated. Overall the file structure is fairly simple to understand. 

**Photos**
  Photos are stored in the Public Folder inside a folder called "Photos" and then inside of a folder that pertains to that specific product. I have 4 examples for you too look at. 
  *****
    Each product should have its own folder for the photos that pertain to it and no two products should share a folder, cause you know bugs and stuff.
  ***** 

**Store Config File**
  Next I would suggest looking at the store_config file in the src/assets folder and get an understanding of how the photos, IDs, and URLs work together. There is also primary and secondary colors towards the top. Change those to colors you like, the main color is going to dictate the color of things like the Add to Cart Button, whereas the dark color dictates things like the color of the hover effect of said button. 

**Cart Items** 
  Cart Items are stored in Local Storage. When the user completes a transaction Local Storage is deleted and the cart number is updated to reflect they have nothing in there cart. 

**Emails**
  All of the EMAIL items are generated by the following Gmail Oauth2 Setup 

    ********** https://stackoverflow.com/a/43202668 **********

  set the values for Gmail Oauth2 Setup into the cofig.env file in the root.


****************************************************************
****************************************************************
****************************************************************
              Alright lets get this started
                (I hope this is centered)
****************************************************************
****************************************************************
****************************************************************

First and foremost we need to make a Stripe account so head over to https://stripe.com/ and create an account. After you make your account you will be able to get the API keys you need and you will be able to create products for your store.

Change the values in src/assets/store_config.json to change the store name. This will change the name displayed on the Banner at the top of the store. 

*****You get the Stripe Public and Secret ID from the Stripe Dashboard*****

Make sure to add your Stripe Public ID in the store_config.json file in the api_key field

Your Stripe Secret ID goes inside the config.env file in the root

You can go ahead and change the ADMIN_PW to whatever you like, this is the password used to get into the admin section of the app. You can go ahead and make SESSION_SECRET as well. Make it hard to guess.

Photos go into the photo folder inside public
  * Seperate Products into subfolders for photos 
    * They are based on the product URL so keep them seperate

  * Point the url field in the store_config.json file to the Folder for the photos
  * The Photo Array in the store_config.json file holds the file name of each photo 
    * The photo you put first is going to be the main photo shown

*****Make sure to set up your config file according to the README file instructions*****

Stripe Product IDs are generated by creating new products in the stripe dashboard. 
  * On the menu to the left go to Orders. 
  * When you click on Orders a Product tab will show below it.
  * From the Product tab you can create new Products.
    * You can leave the ID blank and Stripe will generate a random ID for you
  
  * This ID will go into the Stripe ID field in the store_config.json file 
  * Don't add anything in the Attributes field, those are created in the store_config.json file. 

Prices are based on the SKU you set up for an individual product within the Stripe dashboard
  * Click on your product, unless your product is already showing in the dashboard
  * Inside the Inventory section you can add an SKU, this is where the price is fetched from

****************************************************************
****************************************************************
****************************************************************
                Where do we go from here?
****************************************************************
****************************************************************
****************************************************************

At this point you should have a running store. If you have a Server running, npm run server or yarn server, you should be seeing your products and prices. The last thing to do is test the payment system. Stripe has a list of test cards but I mainly use 4242 4242 4242 4242 for testing, make sure you use an expiration date in the future. If everything went correctly you should be able to make test purchases. 

****************************************************************
****************************************************************
****************************************************************
          Always refer back to either the README or 
                this file for any instructions. 
****************************************************************
****************************************************************
****************************************************************